// inherits from Rectangle function Square(size) { this.length = size; this.width  =  size; } Square.prototype  =  Object.create(Rectangle.prototype, {                         constructor:  {                             configurable:                             enumerable: true, true,                             value:  Square,                             writable:                         }                     }); true Square.prototype.toString = function() { return  "[Square "  +  this.length  +  "x"  +  this.width  +  "]"; };
function Rectangle(length, width) { this.length = length; this.width  =  width; } Rectangle.prototype.getArea = function() { return this.length  *  this.width; }; Rectangle.prototype.toString = function() { return  "[Rectangle "  +  this.length  +  "x"  +  this.width  +  "]"; }; // inherits from Rectangle v function Square(size) { this.length = size; this.width  =  size; } Square.prototype  =  new  Rectangle(); Square.prototype.constructor  =  Square; Square.prototype.toString = function() { return  "[Square "  +  this.length  +  "x"  +  this.width  +  "]"; }; var  rect  =  new  Rectangle(5,  10); var  square  =  new  Square(6); console.log(rect.getArea());        console.log(square.getArea());      console.log(rect.toString());       console.log(square.toString());     // 50 // 36 // "[Rectangle 5x10]" // "[Square 6x6]" console.log(rect  instanceof  Rectangle);     console.log(rect  instanceof Object);        console.log(square  instanceof  Square);      console.log(square  instanceof  Rectangle);   console.log(square  instanceof Object); 